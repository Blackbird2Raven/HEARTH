name: Issue Labeler
on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  label-new-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Label issues based on template
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            if (!issue) {
              console.log('No issue data found');
              return;
            }

            const defaultLabels = ['pending-review'];
            
            // Parse form data to get hunt type
            try {
              if (issue.body) {
                const match = issue.body.match(/### Hunt Type ðŸ”¥\s*\n\n([^\n]+)/);
                if (match) {
                  const huntType = match[1];
                  
                  if (huntType.includes('Flames')) {
                    defaultLabels.push('hypothesis-driven');
                  } else if (huntType.includes('Embers')) {
                    defaultLabels.push('baseline');
                  } else if (huntType.includes('Alchemy')) {
                    defaultLabels.push('model-assisted');
                  }
                }
              }
              
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.name,
                issue_number: issue.number,
                labels: defaultLabels
              });
            } catch (error) {
              console.log('Error:', error);
              console.log('Issue body:', issue.body);
            }
