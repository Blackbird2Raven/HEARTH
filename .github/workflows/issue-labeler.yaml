name: Issue Labeler
on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  label-new-issues:
    runs-on: ubuntu-latest
    if: github.repository == 'THOR-Collective/HEARTH'
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            try {
              const issueData = await github.rest.issues.get({
                owner: 'THOR-Collective',
                repo: 'HEARTH',
                issue_number: context.payload.issue.number
              });
              
              const issue = issueData.data;
              const defaultLabels = ['pending-review'];
              
              const formMatch = issue.body?.match(/### Hunt Type ðŸ”¥\s*\n\n([^\n]+)/);
              if (formMatch) {
                const huntType = formMatch[1];
                console.log('Hunt type found:', huntType);
                
                if (huntType.includes('Flames')) defaultLabels.push('hypothesis-driven');
                if (huntType.includes('Embers')) defaultLabels.push('baseline');
                if (huntType.includes('Alchemy')) defaultLabels.push('model-assisted');
              }

              await github.rest.issues.addLabels({
                owner: 'THOR-Collective',
                repo: 'HEARTH',
                issue_number: issue.number,
                labels: defaultLabels
              });
            } catch (error) {
              console.error('Error:', error);
              console.log('Issue data:', context.payload.issue);
            }
