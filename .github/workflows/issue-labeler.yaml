name: Issue Labeler
on:
  issues:
    types: [opened]
  workflow_dispatch:

jobs:
  label-new-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Label issues based on template
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            console.log('Context payload:', JSON.stringify(context.payload));
            
            // Safety check
            if (!issue) {
              console.log('Issue object is undefined');
              return;
            }
            
            const defaultLabels = ['pending-review'];
            
            // Try to get form data from issue body
            try {
              // Get form response data
              const formData = JSON.parse(issue.body);
              const huntType = formData.hunt_type;
              
              if (huntType) {
                if (huntType.includes('Flames')) {
                  defaultLabels.push('hypothesis-driven');
                } else if (huntType.includes('Embers')) {
                  defaultLabels.push('baseline'); 
                } else if (huntType.includes('Alchemy')) {
                  defaultLabels.push('model-assisted');
                }
              }
            
              // Add labels
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.name,
                issue_number: issue.number,
                labels: defaultLabels
              });
            
            } catch (error) {
              console.log('Error processing form data:', error);
              console.log('Raw issue body:', issue.body);
            }
